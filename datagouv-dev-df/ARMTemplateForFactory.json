{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datagouv-dev-df"
		},
		"LS_ADLStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://stgdatagouv', linkedService().env, '.dfs.core.windows.net')}"
		},
		"LS_KV_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "@{concat('https://keyvaluds-datagouv-',linkedService().env,'.vault.azure.net/')}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Valeurs_Fonciere')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Valeurs_Fonciere",
								"type": "DataFlowReference",
								"parameters": {
									"FileName": {
										"value": "'@{pipeline().parameters.sourceFileName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ValeursFonciereyyyy": {
										"env": {
											"value": "@pipeline().globalParameters.Environnement",
											"type": "Expression"
										},
										"FileName": {
											"value": "@pipeline().parameters.sourceFileName",
											"type": "Expression"
										}
									},
									"Generationdefichiercsv": {
										"env": {
											"value": "@pipeline().globalParameters.Environnement",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sourceFileName": {
						"type": "string",
						"defaultValue": "ValeursFoncieres-2024"
					},
					"env": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Ingestion_Valeurs_Fonciere"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Valeurs_Fonciere')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_To_Parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_CSV_PARQUET",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "champs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "champs",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "nom",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nom",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "test",
								"type": "DatasetReference",
								"parameters": {
									"env": {
										"value": "@pipeline().globalParameters.Environnement",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "parquet_test",
								"type": "DatasetReference",
								"parameters": {
									"env": {
										"value": "@pipeline().globalParameters.Environnement",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/test')]",
				"[concat(variables('factoryId'), '/datasets/parquet_test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessedValeurFoncieres')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLStorage",
					"type": "LinkedServiceReference",
					"parameters": {
						"env": {
							"value": "@dataset().env",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"env": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ValeursFoncieres",
						"fileSystem": "processd"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ValeursFoncieres')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLStorage",
					"type": "LinkedServiceReference",
					"parameters": {
						"env": {
							"value": "@dataset().env",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"env": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ValeursFoncieres-2024.txt",
						"fileSystem": "raw"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Identifiant de document",
						"type": "String"
					},
					{
						"name": "Reference document",
						"type": "String"
					},
					{
						"name": "1 Articles CGI",
						"type": "String"
					},
					{
						"name": "2 Articles CGI",
						"type": "String"
					},
					{
						"name": "3 Articles CGI",
						"type": "String"
					},
					{
						"name": "4 Articles CGI",
						"type": "String"
					},
					{
						"name": "5 Articles CGI",
						"type": "String"
					},
					{
						"name": "No disposition",
						"type": "String"
					},
					{
						"name": "Date mutation",
						"type": "String"
					},
					{
						"name": "Nature mutation",
						"type": "String"
					},
					{
						"name": "Valeur fonciere",
						"type": "String"
					},
					{
						"name": "No voie",
						"type": "String"
					},
					{
						"name": "B/T/Q",
						"type": "String"
					},
					{
						"name": "Type de voie",
						"type": "String"
					},
					{
						"name": "Code voie",
						"type": "String"
					},
					{
						"name": "Voie",
						"type": "String"
					},
					{
						"name": "Code postal",
						"type": "String"
					},
					{
						"name": "Commune",
						"type": "String"
					},
					{
						"name": "Code departement",
						"type": "String"
					},
					{
						"name": "Code commune",
						"type": "String"
					},
					{
						"name": "Prefixe de section",
						"type": "String"
					},
					{
						"name": "Section",
						"type": "String"
					},
					{
						"name": "No plan",
						"type": "String"
					},
					{
						"name": "No Volume",
						"type": "String"
					},
					{
						"name": "1er lot",
						"type": "String"
					},
					{
						"name": "Surface Carrez du 1er lot",
						"type": "String"
					},
					{
						"name": "2eme lot",
						"type": "String"
					},
					{
						"name": "Surface Carrez du 2eme lot",
						"type": "String"
					},
					{
						"name": "3eme lot",
						"type": "String"
					},
					{
						"name": "Surface Carrez du 3eme lot",
						"type": "String"
					},
					{
						"name": "4eme lot",
						"type": "String"
					},
					{
						"name": "Surface Carrez du 4eme lot",
						"type": "String"
					},
					{
						"name": "5eme lot",
						"type": "String"
					},
					{
						"name": "Surface Carrez du 5eme lot",
						"type": "String"
					},
					{
						"name": "Nombre de lots",
						"type": "String"
					},
					{
						"name": "Code type local",
						"type": "String"
					},
					{
						"name": "Type local",
						"type": "String"
					},
					{
						"name": "Identifiant local",
						"type": "String"
					},
					{
						"name": "Surface reelle bati",
						"type": "String"
					},
					{
						"name": "Nombre pieces principales",
						"type": "String"
					},
					{
						"name": "Nature culture",
						"type": "String"
					},
					{
						"name": "Nature culture speciale",
						"type": "String"
					},
					{
						"name": "Surface terrain",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parquet_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLStorage",
					"type": "LinkedServiceReference",
					"parameters": {
						"env": {
							"value": "@dataset().env",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"env": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test_parquet",
						"folderPath": "parquet",
						"fileSystem": "processd"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLStorage",
					"type": "LinkedServiceReference",
					"parameters": {
						"env": {
							"value": "@dataset().env",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"env": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test.csv",
						"fileSystem": "raw"
					},
					"columnDelimiter": ";",
					"escapeChar": "",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "champs",
						"type": "String"
					},
					{
						"name": "nom",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"env": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KV",
							"type": "LinkedServiceReference",
							"parameters": {
								"env": {
									"value": "@linkedService().env",
									"type": "Expression"
								}
							}
						},
						"secretName": "blob-storage"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_KV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Création de Link service qui se base sur des ",
				"parameters": {
					"env": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_KV_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Valeurs_Fonciere')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ValeursFoncieres",
								"type": "DatasetReference"
							},
							"name": "ValeursFonciereyyyy"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ProcessedValeurFoncieres",
								"type": "DatasetReference"
							},
							"name": "Generationdefichiercsv",
							"rejectedDataLinkedService": {
								"referenceName": "LS_ADLStorage",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "RajoutDeChamps"
						}
					],
					"scriptLines": [
						"parameters{",
						"     FileName as string",
						"}",
						"source(output(",
						"          {Identifiant de document} as string,",
						"          {Reference document} as string,",
						"          {1 Articles CGI} as string,",
						"          {2 Articles CGI} as string,",
						"          {3 Articles CGI} as string,",
						"          {4 Articles CGI} as string,",
						"          {5 Articles CGI} as string,",
						"          {No disposition} as string,",
						"          {Date mutation} as string,",
						"          {Nature mutation} as string,",
						"          {Valeur fonciere} as string,",
						"          {No voie} as string,",
						"          {B/T/Q} as string,",
						"          {Type de voie} as string,",
						"          {Code voie} as string,",
						"          Voie as string,",
						"          {Code postal} as string,",
						"          Commune as string,",
						"          {Code departement} as string,",
						"          {Code commune} as string,",
						"          {Prefixe de section} as string,",
						"          Section as string,",
						"          {No plan} as string,",
						"          {No Volume} as string,",
						"          {1er lot} as string,",
						"          {Surface Carrez du 1er lot} as string,",
						"          {2eme lot} as string,",
						"          {Surface Carrez du 2eme lot} as string,",
						"          {3eme lot} as string,",
						"          {Surface Carrez du 3eme lot} as string,",
						"          {4eme lot} as string,",
						"          {Surface Carrez du 4eme lot} as string,",
						"          {5eme lot} as string,",
						"          {Surface Carrez du 5eme lot} as string,",
						"          {Nombre de lots} as string,",
						"          {Code type local} as string,",
						"          {Type local} as string,",
						"          {Identifiant local} as string,",
						"          {Surface reelle bati} as string,",
						"          {Nombre pieces principales} as string,",
						"          {Nature culture} as string,",
						"          {Nature culture speciale} as string,",
						"          {Surface terrain} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     moveFiles: ['','Archive'],",
						"     dateFormats: ['MM-dd-yyyy'],",
						"     timestampFormats: ['MM-dd-yyyy HH:mm:ss'],",
						"     preferredFractionalType: 'float') ~> ValeursFonciereyyyy",
						"ValeursFonciereyyyy derive(Fichier_Source = $FileName) ~> RajoutDeChamps",
						"RajoutDeChamps sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     partitionFileNames:['Valeur_Fonciere.csv'],",
						"     umask: 0775,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          {Identifiant de document},",
						"          {Reference document},",
						"          {1 Articles CGI},",
						"          {2 Articles CGI},",
						"          {3 Articles CGI},",
						"          {4 Articles CGI},",
						"          {5 Articles CGI},",
						"          {No disposition},",
						"          {Date mutation},",
						"          {Nature mutation},",
						"          {Valeur fonciere},",
						"          {No voie},",
						"          {B/T/Q},",
						"          {Type de voie},",
						"          {Code voie},",
						"          Voie,",
						"          {Code postal},",
						"          Commune,",
						"          {Code departement},",
						"          {Code commune},",
						"          {Prefixe de section},",
						"          Section,",
						"          {No plan},",
						"          {No Volume},",
						"          {1er lot},",
						"          {Surface Carrez du 1er lot},",
						"          {2eme lot},",
						"          {Surface Carrez du 2eme lot},",
						"          {3eme lot},",
						"          {Surface Carrez du 3eme lot},",
						"          {4eme lot},",
						"          {Surface Carrez du 4eme lot},",
						"          {5eme lot},",
						"          {Surface Carrez du 5eme lot},",
						"          {Nombre de lots},",
						"          {Code type local},",
						"          {Type local},",
						"          {Identifiant local},",
						"          {Surface reelle bati},",
						"          {Nombre pieces principales},",
						"          {Nature culture},",
						"          {Nature culture speciale},",
						"          {Surface terrain},",
						"          Fichier_Source",
						"     ),",
						"     partitionBy('hash', 1)) ~> Generationdefichiercsv"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ValeursFoncieres')]",
				"[concat(variables('factoryId'), '/datasets/ProcessedValeurFoncieres')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLStorage')]"
			]
		}
	]
}